from .hot_springs import *

# fmt: off
EXAMPLE = """\
???.### 1,1,3
.??..??...?##. 1,1,3
?#?#?#?#?#?#?#? 1,3,1,6
????.#...#... 4,1,1
????.######..#####. 1,6,5
?###???????? 3,2,1
"""

MODEL = [
    ("???.###", [1, 1, 3]),
    (".??..??...?##.", [1, 1, 3]),
    ("?#?#?#?#?#?#?#?", [1, 3, 1, 6]),
    ("????.#...#...", [4, 1, 1]),
    ("????.######..#####.", [1, 6, 5]),
    ("?###????????", [3, 2, 1]),
]
# fmt: on


def test_parse():
    assert parse(EXAMPLE) == MODEL


def test_arrangements():
    assert arrangements("???.###", [1, 1, 3]) == 1
    assert arrangements(".??..??...?##.", [1, 1, 3]) == 4
    assert arrangements("?#?#?#?#?#?#?#?", [1, 3, 1, 6]) == 1
    assert arrangements("????.#...#...", [4, 1, 1]) == 1
    assert arrangements("????.######..#####.", [1, 6, 5]) == 4
    assert arrangements("?###????????", [3, 2, 1]) == 10


def test_part_one():
    assert part_one(MODEL) == 21


# def test_part_two():
#     assert part_two(MODEL) == 1_234
